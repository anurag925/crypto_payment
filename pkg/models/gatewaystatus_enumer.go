// Code generated by "enumer -type=GatewayStatus -json -transform=snake -trimprefix=GatewayStatus"; DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
	"strings"
)

const _GatewayStatusName = "createdactiveinactivedeprecated"

var _GatewayStatusIndex = [...]uint8{0, 7, 13, 21, 31}

const _GatewayStatusLowerName = "createdactiveinactivedeprecated"

func (i GatewayStatus) String() string {
	if i < 0 || i >= GatewayStatus(len(_GatewayStatusIndex)-1) {
		return fmt.Sprintf("GatewayStatus(%d)", i)
	}
	return _GatewayStatusName[_GatewayStatusIndex[i]:_GatewayStatusIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _GatewayStatusNoOp() {
	var x [1]struct{}
	_ = x[GatewayStatusCreated-(0)]
	_ = x[GatewayStatusActive-(1)]
	_ = x[GatewayStatusInactive-(2)]
	_ = x[GatewayStatusDeprecated-(3)]
}

var _GatewayStatusValues = []GatewayStatus{GatewayStatusCreated, GatewayStatusActive, GatewayStatusInactive, GatewayStatusDeprecated}

var _GatewayStatusNameToValueMap = map[string]GatewayStatus{
	_GatewayStatusName[0:7]:        GatewayStatusCreated,
	_GatewayStatusLowerName[0:7]:   GatewayStatusCreated,
	_GatewayStatusName[7:13]:       GatewayStatusActive,
	_GatewayStatusLowerName[7:13]:  GatewayStatusActive,
	_GatewayStatusName[13:21]:      GatewayStatusInactive,
	_GatewayStatusLowerName[13:21]: GatewayStatusInactive,
	_GatewayStatusName[21:31]:      GatewayStatusDeprecated,
	_GatewayStatusLowerName[21:31]: GatewayStatusDeprecated,
}

var _GatewayStatusNames = []string{
	_GatewayStatusName[0:7],
	_GatewayStatusName[7:13],
	_GatewayStatusName[13:21],
	_GatewayStatusName[21:31],
}

// GatewayStatusString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func GatewayStatusString(s string) (GatewayStatus, error) {
	if val, ok := _GatewayStatusNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _GatewayStatusNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to GatewayStatus values", s)
}

// GatewayStatusValues returns all values of the enum
func GatewayStatusValues() []GatewayStatus {
	return _GatewayStatusValues
}

// GatewayStatusStrings returns a slice of all String values of the enum
func GatewayStatusStrings() []string {
	strs := make([]string, len(_GatewayStatusNames))
	copy(strs, _GatewayStatusNames)
	return strs
}

// IsAGatewayStatus returns "true" if the value is listed in the enum definition. "false" otherwise
func (i GatewayStatus) IsAGatewayStatus() bool {
	for _, v := range _GatewayStatusValues {
		if i == v {
			return true
		}
	}
	return false
}

// MarshalJSON implements the json.Marshaler interface for GatewayStatus
func (i GatewayStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

// UnmarshalJSON implements the json.Unmarshaler interface for GatewayStatus
func (i *GatewayStatus) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("GatewayStatus should be a string, got %s", data)
	}

	var err error
	*i, err = GatewayStatusString(s)
	return err
}
