// Code generated by "enumer -type=PaymentStatus -json -transform=snake -trimprefix=PaymentStatus"; DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
	"strings"
)

const _PaymentStatusName = "createdpendingcompletedrejectedexpiredcanceledrefunded"

var _PaymentStatusIndex = [...]uint8{0, 7, 14, 23, 31, 38, 46, 54}

const _PaymentStatusLowerName = "createdpendingcompletedrejectedexpiredcanceledrefunded"

func (i PaymentStatus) String() string {
	if i < 0 || i >= PaymentStatus(len(_PaymentStatusIndex)-1) {
		return fmt.Sprintf("PaymentStatus(%d)", i)
	}
	return _PaymentStatusName[_PaymentStatusIndex[i]:_PaymentStatusIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _PaymentStatusNoOp() {
	var x [1]struct{}
	_ = x[PaymentStatusCreated-(0)]
	_ = x[PaymentStatusPending-(1)]
	_ = x[PaymentStatusCompleted-(2)]
	_ = x[PaymentStatusRejected-(3)]
	_ = x[PaymentStatusExpired-(4)]
	_ = x[PaymentStatusCanceled-(5)]
	_ = x[PaymentStatusRefunded-(6)]
}

var _PaymentStatusValues = []PaymentStatus{PaymentStatusCreated, PaymentStatusPending, PaymentStatusCompleted, PaymentStatusRejected, PaymentStatusExpired, PaymentStatusCanceled, PaymentStatusRefunded}

var _PaymentStatusNameToValueMap = map[string]PaymentStatus{
	_PaymentStatusName[0:7]:        PaymentStatusCreated,
	_PaymentStatusLowerName[0:7]:   PaymentStatusCreated,
	_PaymentStatusName[7:14]:       PaymentStatusPending,
	_PaymentStatusLowerName[7:14]:  PaymentStatusPending,
	_PaymentStatusName[14:23]:      PaymentStatusCompleted,
	_PaymentStatusLowerName[14:23]: PaymentStatusCompleted,
	_PaymentStatusName[23:31]:      PaymentStatusRejected,
	_PaymentStatusLowerName[23:31]: PaymentStatusRejected,
	_PaymentStatusName[31:38]:      PaymentStatusExpired,
	_PaymentStatusLowerName[31:38]: PaymentStatusExpired,
	_PaymentStatusName[38:46]:      PaymentStatusCanceled,
	_PaymentStatusLowerName[38:46]: PaymentStatusCanceled,
	_PaymentStatusName[46:54]:      PaymentStatusRefunded,
	_PaymentStatusLowerName[46:54]: PaymentStatusRefunded,
}

var _PaymentStatusNames = []string{
	_PaymentStatusName[0:7],
	_PaymentStatusName[7:14],
	_PaymentStatusName[14:23],
	_PaymentStatusName[23:31],
	_PaymentStatusName[31:38],
	_PaymentStatusName[38:46],
	_PaymentStatusName[46:54],
}

// PaymentStatusString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func PaymentStatusString(s string) (PaymentStatus, error) {
	if val, ok := _PaymentStatusNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _PaymentStatusNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to PaymentStatus values", s)
}

// PaymentStatusValues returns all values of the enum
func PaymentStatusValues() []PaymentStatus {
	return _PaymentStatusValues
}

// PaymentStatusStrings returns a slice of all String values of the enum
func PaymentStatusStrings() []string {
	strs := make([]string, len(_PaymentStatusNames))
	copy(strs, _PaymentStatusNames)
	return strs
}

// IsAPaymentStatus returns "true" if the value is listed in the enum definition. "false" otherwise
func (i PaymentStatus) IsAPaymentStatus() bool {
	for _, v := range _PaymentStatusValues {
		if i == v {
			return true
		}
	}
	return false
}

// MarshalJSON implements the json.Marshaler interface for PaymentStatus
func (i PaymentStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

// UnmarshalJSON implements the json.Unmarshaler interface for PaymentStatus
func (i *PaymentStatus) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("PaymentStatus should be a string, got %s", data)
	}

	var err error
	*i, err = PaymentStatusString(s)
	return err
}
