// Code generated by "enumer -type=PaymentPlatform -json -transform=snake -trimprefix=PaymentPlatform"; DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
	"strings"
)

const _PaymentPlatformName = "webandroidios"

var _PaymentPlatformIndex = [...]uint8{0, 3, 10, 13}

const _PaymentPlatformLowerName = "webandroidios"

func (i PaymentPlatform) String() string {
	if i < 0 || i >= PaymentPlatform(len(_PaymentPlatformIndex)-1) {
		return fmt.Sprintf("PaymentPlatform(%d)", i)
	}
	return _PaymentPlatformName[_PaymentPlatformIndex[i]:_PaymentPlatformIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _PaymentPlatformNoOp() {
	var x [1]struct{}
	_ = x[PaymentPlatformWeb-(0)]
	_ = x[PaymentPlatformAndroid-(1)]
	_ = x[PaymentPlatformIos-(2)]
}

var _PaymentPlatformValues = []PaymentPlatform{PaymentPlatformWeb, PaymentPlatformAndroid, PaymentPlatformIos}

var _PaymentPlatformNameToValueMap = map[string]PaymentPlatform{
	_PaymentPlatformName[0:3]:        PaymentPlatformWeb,
	_PaymentPlatformLowerName[0:3]:   PaymentPlatformWeb,
	_PaymentPlatformName[3:10]:       PaymentPlatformAndroid,
	_PaymentPlatformLowerName[3:10]:  PaymentPlatformAndroid,
	_PaymentPlatformName[10:13]:      PaymentPlatformIos,
	_PaymentPlatformLowerName[10:13]: PaymentPlatformIos,
}

var _PaymentPlatformNames = []string{
	_PaymentPlatformName[0:3],
	_PaymentPlatformName[3:10],
	_PaymentPlatformName[10:13],
}

// PaymentPlatformString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func PaymentPlatformString(s string) (PaymentPlatform, error) {
	if val, ok := _PaymentPlatformNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _PaymentPlatformNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to PaymentPlatform values", s)
}

// PaymentPlatformValues returns all values of the enum
func PaymentPlatformValues() []PaymentPlatform {
	return _PaymentPlatformValues
}

// PaymentPlatformStrings returns a slice of all String values of the enum
func PaymentPlatformStrings() []string {
	strs := make([]string, len(_PaymentPlatformNames))
	copy(strs, _PaymentPlatformNames)
	return strs
}

// IsAPaymentPlatform returns "true" if the value is listed in the enum definition. "false" otherwise
func (i PaymentPlatform) IsAPaymentPlatform() bool {
	for _, v := range _PaymentPlatformValues {
		if i == v {
			return true
		}
	}
	return false
}

// MarshalJSON implements the json.Marshaler interface for PaymentPlatform
func (i PaymentPlatform) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

// UnmarshalJSON implements the json.Unmarshaler interface for PaymentPlatform
func (i *PaymentPlatform) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("PaymentPlatform should be a string, got %s", data)
	}

	var err error
	*i, err = PaymentPlatformString(s)
	return err
}
